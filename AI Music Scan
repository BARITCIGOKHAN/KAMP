<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Music Scanner</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Courier New', monospace;
            background: #000;
            color: #00ff41;
            overflow-x: hidden;
            height: 100vh;
        }

        .app-container {
            position: relative;
            height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        /* Animated Cyberpunk Background */
        .cyber-background {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background: linear-gradient(45deg, #000428 0%, #004e92 100%);
        }

        .matrix-rain {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        .matrix-column {
            position: absolute;
            top: -100px;
            color: #00ff41;
            font-size: 14px;
            animation: fall linear infinite;
            opacity: 0.7;
        }

        @keyframes fall {
            0% { transform: translateY(-100vh); }
            100% { transform: translateY(100vh); }
        }

        .grid-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: 
                linear-gradient(rgba(0,255,65,0.1) 1px, transparent 1px),
                linear-gradient(90deg, rgba(0,255,65,0.1) 1px, transparent 1px);
            background-size: 50px 50px;
            animation: gridPulse 3s ease-in-out infinite;
        }

        @keyframes gridPulse {
            0%, 100% { opacity: 0.2; }
            50% { opacity: 0.4; }
        }

        /* App Header */
        .app-header {
            text-align: center;
            margin-bottom: 50px;
            animation: glow 2s ease-in-out infinite alternate;
        }

        .app-title {
            font-size: 2.5rem;
            color: #00ff41;
            text-shadow: 0 0 20px #00ff41, 0 0 40px #00ff41;
            margin-bottom: 10px;
        }

        .app-subtitle {
            font-size: 1rem;
            color: #40e0d0;
            opacity: 0.8;
        }

        @keyframes glow {
            from { text-shadow: 0 0 20px #00ff41, 0 0 40px #00ff41; }
            to { text-shadow: 0 0 30px #00ff41, 0 0 60px #00ff41, 0 0 80px #00ff41; }
        }

        /* Main AI Button */
        .ai-button-container {
            position: relative;
            margin-bottom: 50px;
        }

        .ai-button {
            width: 200px;
            height: 200px;
            border: none;
            border-radius: 50%;
            background: linear-gradient(45deg, #ff006e, #8338ec, #3a86ff);
            cursor: pointer;
            position: relative;
            transition: all 0.3s ease;
            box-shadow: 0 0 50px rgba(131, 56, 236, 0.5);
            animation: pulse 2s ease-in-out infinite;
        }

        .ai-button:hover {
            transform: scale(1.1);
            box-shadow: 0 0 80px rgba(131, 56, 236, 0.8);
        }

        .ai-button:active {
            transform: scale(0.95);
        }

        @keyframes pulse {
            0%, 100% { box-shadow: 0 0 50px rgba(131, 56, 236, 0.5); }
            50% { box-shadow: 0 0 100px rgba(131, 56, 236, 0.8), 0 0 150px rgba(131, 56, 236, 0.4); }
        }

        .button-text {
            color: white;
            font-size: 1.2rem;
            font-weight: bold;
            text-shadow: 0 0 10px rgba(255,255,255,0.8);
        }

        .scanning-ring {
            position: absolute;
            top: -10px;
            left: -10px;
            width: 220px;
            height: 220px;
            border: 3px solid transparent;
            border-top: 3px solid #00ff41;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            display: none;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Status Display */
        .status-display {
            text-align: center;
            margin-bottom: 30px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .status-text {
            font-size: 1.2rem;
            color: #40e0d0;
            text-shadow: 0 0 10px #40e0d0;
        }

        /* Results Container */
        .results-container {
            width: 90%;
            max-width: 600px;
            background: rgba(0, 0, 0, 0.8);
            border: 2px solid #00ff41;
            border-radius: 15px;
            padding: 20px;
            margin-top: 20px;
            box-shadow: 0 0 30px rgba(0, 255, 65, 0.3);
            display: none;
        }

        .results-title {
            font-size: 1.5rem;
            color: #00ff41;
            text-align: center;
            margin-bottom: 20px;
            text-shadow: 0 0 10px #00ff41;
        }

        .song-result {
            background: rgba(64, 224, 208, 0.1);
            border: 1px solid #40e0d0;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }

        .song-result:hover {
            background: rgba(64, 224, 208, 0.2);
            box-shadow: 0 0 20px rgba(64, 224, 208, 0.4);
            transform: translateY(-2px);
        }

        .song-title {
            font-size: 1.2rem;
            color: #ffffff;
            margin-bottom: 5px;
            font-weight: bold;
        }

        .song-artist {
            font-size: 1rem;
            color: #40e0d0;
            margin-bottom: 10px;
        }

        .song-duration {
            font-size: 0.9rem;
            color: #00ff41;
            margin-bottom: 10px;
        }

        .play-button {
            background: linear-gradient(45deg, #ff006e, #8338ec);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            margin-right: 10px;
        }

        .play-button:hover {
            background: linear-gradient(45deg, #ff4081, #9c4dcc);
            box-shadow: 0 0 15px rgba(255, 64, 129, 0.5);
        }

        /* Audio Visualizer */
        .audio-visualizer {
            display: flex;
            justify-content: center;
            align-items: end;
            height: 60px;
            margin: 15px 0;
        }

        .bar {
            width: 4px;
            margin: 0 2px;
            background: linear-gradient(to top, #00ff41, #40e0d0);
            border-radius: 2px;
            animation: visualize 1s ease-in-out infinite alternate;
        }

        @keyframes visualize {
            from { height: 10px; }
            to { height: 40px; }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .app-title { font-size: 2rem; }
            .ai-button { width: 150px; height: 150px; }
            .scanning-ring { width: 170px; height: 170px; top: -10px; left: -10px; }
            .results-container { width: 95%; }
        }

        .loading-dots {
            display: inline-block;
        }

        .loading-dots::after {
            content: '';
            animation: dots 2s linear infinite;
        }

        @keyframes dots {
            0%, 20% { content: ''; }
            40% { content: '.'; }
            60% { content: '..'; }
            80%, 100% { content: '...'; }
        }
    </style>
</head>
<body>
    <div class="cyber-background">
        <div class="matrix-rain" id="matrixRain"></div>
        <div class="grid-overlay"></div>
    </div>

    <div class="app-container">
        <div class="app-header">
            <div class="app-title">AI MUSIC SCANNER</div>
            <div class="app-subtitle">Advanced Audio Recognition System</div>
        </div>

        <div class="ai-button-container">
            <button class="ai-button" id="scanButton" onclick="startScanning()">
                <span class="button-text">SCAN MUSIC</span>
            </button>
            <div class="scanning-ring" id="scanningRing"></div>
        </div>

        <div class="status-display">
            <div class="status-text" id="statusText">Tap the button to identify nearby music</div>
        </div>

        <div class="audio-visualizer" id="visualizer" style="display: none;">
            <div class="bar" style="animation-delay: 0s;"></div>
            <div class="bar" style="animation-delay: 0.1s;"></div>
            <div class="bar" style="animation-delay: 0.2s;"></div>
            <div class="bar" style="animation-delay: 0.3s;"></div>
            <div class="bar" style="animation-delay: 0.4s;"></div>
            <div class="bar" style="animation-delay: 0.5s;"></div>
            <div class="bar" style="animation-delay: 0.6s;"></div>
            <div class="bar" style="animation-delay: 0.7s;"></div>
            <div class="bar" style="animation-delay: 0.8s;"></div>
            <div class="bar" style="animation-delay: 0.9s;"></div>
        </div>

        <div class="results-container" id="resultsContainer">
            <div class="results-title">ðŸŽµ IDENTIFIED TRACKS</div>
            <div id="songResults"></div>
        </div>
    </div>

    <script>
        // Matrix Rain Effect
        function createMatrixRain() {
            const matrixContainer = document.getElementById('matrixRain');
            const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%&*()';
            
            for (let i = 0; i < 50; i++) {
                const column = document.createElement('div');
                column.className = 'matrix-column';
                column.style.left = Math.random() * 100 + '%';
                column.style.animationDuration = (Math.random() * 3 + 2) + 's';
                column.style.animationDelay = Math.random() * 2 + 's';
                
                let text = '';
                for (let j = 0; j < 20; j++) {
                    text += characters[Math.floor(Math.random() * characters.length)] + '<br>';
                }
                column.innerHTML = text;
                
                matrixContainer.appendChild(column);
            }
        }

        // Sample music database
        const musicDatabase = [
            {
                title: "Neon Dreams",
                artist: "Cyberpunk Collective",
                duration: "3:42",
                genre: "Electronic"
            },
            {
                title: "Digital Horizons",
                artist: "AI Orchestra",
                duration: "4:15",
                genre: "Synthwave"
            },
            {
                title: "Matrix Melody",
                artist: "Virtual Reality",
                duration: "3:28",
                genre: "Techno"
            },
            {
                title: "Future Bass",
                artist: "Neural Network",
                duration: "4:03",
                genre: "Electronic"
            },
            {
                title: "Quantum Beats",
                artist: "Tech Minds",
                duration: "3:55",
                genre: "EDM"
            }
        ];

        let isScanning = false;
        let currentAudio = null;

        function startScanning() {
            if (isScanning) return;
            
            isScanning = true;
            const button = document.getElementById('scanButton');
            const ring = document.getElementById('scanningRing');
            const status = document.getElementById('statusText');
            const visualizer = document.getElementById('visualizer');
            const results = document.getElementById('resultsContainer');
            
            // Start scanning animation
            ring.style.display = 'block';
            button.style.pointerEvents = 'none';
            status.innerHTML = 'Listening to ambient audio<span class="loading-dots"></span>';
            visualizer.style.display = 'flex';
            results.style.display = 'none';
            
            // Simulate scanning process
            setTimeout(() => {
                status.innerHTML = 'Processing audio patterns<span class="loading-dots"></span>';
            }, 1500);
            
            setTimeout(() => {
                status.innerHTML = 'Matching with database<span class="loading-dots"></span>';
            }, 3000);
            
            setTimeout(() => {
                // Show results
                displayResults();
                ring.style.display = 'none';
                button.style.pointerEvents = 'auto';
                visualizer.style.display = 'none';
                status.textContent = 'Scan complete! Found 3 matches';
                isScanning = false;
            }, 4500);
        }

        function displayResults() {
            const resultsContainer = document.getElementById('resultsContainer');
            const songResults = document.getElementById('songResults');
            
            // Get 3 random songs from database
            const selectedSongs = musicDatabase.sort(() => 0.5 - Math.random()).slice(0, 3);
            
            songResults.innerHTML = '';
            
            selectedSongs.forEach((song, index) => {
                const songDiv = document.createElement('div');
                songDiv.className = 'song-result';
                songDiv.innerHTML = `
                    <div class="song-title">${song.title}</div>
                    <div class="song-artist">by ${song.artist}</div>
                    <div class="song-duration">Duration: ${song.duration} | Genre: ${song.genre}</div>
                    <button class="play-button" onclick="playMusic('${song.title}', '${song.artist}')">
                        â–¶ PLAY
                    </button>
                    <button class="play-button" onclick="addToPlaylist('${song.title}')">
                        + PLAYLIST
                    </button>
                `;
                songResults.appendChild(songDiv);
            });
            
            resultsContainer.style.display = 'block';
        }

        function playMusic(title, artist) {
            // Stop current audio if playing
            if (currentAudio) {
                currentAudio.pause();
                currentAudio = null;
            }
            
            // Create new audio with a demo track (using a royalty-free sound)
            currentAudio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+Dyvmkggjdt0fPTey0E');
            currentAudio.volume = 0.3;
            
            try {
                currentAudio.play().then(() => {
                    updateStatus(`â™ª Now playing: ${title} by ${artist}`);
                }).catch(e => {
                    updateStatus(`ðŸŽµ Playing: ${title} by ${artist} (Demo mode)`);
                });
            } catch (e) {
                updateStatus(`ðŸŽµ Playing: ${title} by ${artist} (Demo mode)`);
            }
        }

        function addToPlaylist(title) {
            updateStatus(`âœ“ "${title}" added to your playlist!`);
            setTimeout(() => {
                updateStatus('Ready to scan for more music');
            }, 3000);
        }

        function updateStatus(message) {
            document.getElementById('statusText').textContent = message;
        }

        // Initialize matrix rain effect
        createMatrixRain();
        
        // Add some interactive sound effects
        document.getElementById('scanButton').addEventListener('mouseenter', () => {
            if (!isScanning) {
                updateStatus('AI ready - Tap to activate music scanner');
            }
        });
        
        document.getElementById('scanButton').addEventListener('mouseleave', () => {
            if (!isScanning) {
                updateStatus('Tap the button to identify nearby music');
            }
        });
    </script>
</body>
</html>